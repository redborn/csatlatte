<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="student">

	<resultMap type="StudentVo" id="StudentVoMap">
		<result column="student_seq" property="studentSequence" />
		<result column="student_id" property="studentId" />
		<result column="nickname" property="nickname" />
		<result column="use_yn" property="useYn" />
		<result column="count_community" property="countCommunity" />
		<result column="count_comment" property="countComment" />
		<result column="avg_score" property="averageScore" />
		<result column="count_connection" property="countConnection" />
		<result column="last_connection" property="lastConnection" />
		<result column="create_date" property="createDate" />
	</resultMap>
	
	<resultMap type="StudentVo" id="StudentInformationVoMap">
		<result column="student_id" property="studentId"/>
		<result column="content" property="securityQuestionContent"/>
		<result column="photo_code" property="photoCode"/>
		<result column="photo_name" property="photoName"/>
		<result column="nickname" property="nickname"/>
		<result column="csat_name" property="csatName"/>
	</resultMap>
	
	<resultMap type="YmdCountVo" id="YmdCountVoMap">
		<result column="hour" property="hour"/>
		<result column="count_join" property="count"/>
	</resultMap>
	
	<resultMap type="YmCountVo" id="YmCountVoMap">
		<result column="day" property="day"/>
		<result column="count_join" property="count"/>
	</resultMap>
	
	<resultMap type="YearCountVo" id="YearCountVoMap">
		<result column="year" property="year"/>
		<result column="count_join" property="count"/>
	</resultMap>

	<select id="selectOne" parameterType="Map" resultMap="StudentInformationVoMap">
		SELECT cs.student_id AS student_id,csc.content AS content,
		       cs.photo_code AS photo_code,cs.photo_name AS photo_name,
		       cs.nickname AS nickname,c.csat_name AS csat_name
		  FROM csat_student cs,csat_student_scqs css,csat_scqs csc,csat c
		 WHERE student_id = #{id}
		   AND student_password = #{password}
		   AND cs.student_seq = css.student_seq
		   AND css.scqs_seq = csc.scqs_seq
		   AND cs.csat_seq = c.csat_seq
	</select>

	<select id="selectOneDetail" parameterType="int" resultMap="StudentVoMap">
		SELECT cs.student_seq,cs.student_id,cs.nickname,cs.use_yn,cc.count_community,
		       ccc.count_comment,cess.avg_score,csc.count_connection,csc.last_connection,date_format(cs.create_date, '%Y-%m-%d %H:%i:%s') as create_date
		  FROM csat_student cs
		       LEFT OUTER JOIN (SELECT cs.student_seq,COUNT(cc.community_seq) AS
		                                              count_community
		                          FROM csat_student cs
		                               LEFT OUTER JOIN csat_community cc
		                                            ON cs.student_seq = cc.student_seq
		                         GROUP BY cs.student_seq) cc
		                    ON cs.student_seq = cc.student_seq
		       LEFT OUTER JOIN (SELECT cs.student_seq,COUNT(ccc.comment_seq) AS
		                                              count_comment
		                          FROM csat_student cs
		                               LEFT OUTER JOIN csat_community_comment ccc
		                                            ON cs.student_seq = ccc.student_seq
		                         GROUP BY cs.student_seq) ccc
		                    ON cs.student_seq = ccc.student_seq
		       LEFT OUTER JOIN (SELECT cs.student_seq,AVG(cess.score) AS avg_score
		                          FROM csat_student cs
		                               LEFT OUTER JOIN csat_exam_student_score cess
		                                            ON cs.student_seq = cess.student_seq
		                         GROUP BY cs.student_seq) cess
		                    ON cs.student_seq = cess.student_seq
		       LEFT OUTER JOIN (SELECT csc.student_seq,COUNT(csc.connection_seq) AS
		                                               count_connection,
		                       DATE_FORMAT(MAX(csc.connection_date), '%Y-%m-%d %H:%i:%s'
		                       ) AS
		                       last_connection
		                          FROM csat_student_connection csc
		                         GROUP BY csc.student_seq) csc
		                    ON cs.student_seq = csc.student_seq
		 WHERE cs.student_seq = #{studentSequence};
	</select> 

	<select id="selectOneCountPassword" parameterType="Map" resultType="int">
		SELECT COUNT(*)
		  FROM csat_student
		 WHERE student_seq = #{studentSequence}
		   AND student_password = #{password}
	</select>
	
	<select id="selectOneCountIsPassword" parameterType="Map" resultType="int">
		SELECT COUNT(*)
		  FROM csat_student cs,csat_student_scqs css
		 WHERE cs.student_seq = css.student_seq
		   AND cs.student_id = #{id}
		   AND css.content = #{securityAnswer}
	</select>
	
	<select id="selectOneId" parameterType="Map" resultType="String">
		SELECT cs.student_id
		  FROM csat_student cs,csat_student_scqs css
		 WHERE cs.student_seq = css.student_seq
		   AND cs.nickname = #{nickname}
		   AND css.content = #{securityAnswer}
	</select>
	
	<select id="selectOneMaxStudentSequence" resultType="int">
		SELECT IFNULL(MAX(student_seq), 0) + 1
		  FROM csat_student 
	</select>
	
	<select id="selectOneAmountStudent" parameterType="String" resultType="int">
		SELECT COUNT(*)
		  FROM csat_student
	  	 WHERE ( student_id LIKE CONCAT('%', #{search}, '%')
		      	 OR nickname LIKE CONCAT('%', #{search}, '%') )
	</select>
	
	<select id="selectList" parameterType="Map" resultMap="StudentVoMap">
		SELECT cs.student_seq,cs.student_id,cs.nickname,cs.use_yn,cc.count_community,
		       ccc.count_comment,cess.avg_score,csc.count_connection,csc.last_connection
		  FROM csat_student cs
		       LEFT OUTER JOIN (SELECT cs.student_seq,COUNT(cc.community_seq) AS
		                                              count_community
		                          FROM csat_student cs
		                               LEFT OUTER JOIN csat_community cc
		                                            ON cs.student_seq = cc.student_seq
		                         GROUP BY cs.student_seq) cc
		                    ON cs.student_seq = cc.student_seq
		       LEFT OUTER JOIN (SELECT cs.student_seq,COUNT(ccc.comment_seq) AS
		                                              count_comment
		                          FROM csat_student cs
		                               LEFT OUTER JOIN csat_community_comment ccc
		                                            ON cs.student_seq = ccc.student_seq
		                         GROUP BY cs.student_seq) ccc
		                    ON cs.student_seq = ccc.student_seq
		       LEFT OUTER JOIN (SELECT cs.student_seq,AVG(cess.score) AS avg_score
		                          FROM csat_student cs
		                               LEFT OUTER JOIN csat_exam_student_score cess
		                                            ON cs.student_seq = cess.student_seq
		                         GROUP BY cs.student_seq) cess
		                    ON cs.student_seq = cess.student_seq
		       LEFT OUTER JOIN (SELECT csc.student_seq,COUNT(csc.connection_seq) AS
		                                               count_connection,
		                       DATE_FORMAT(MAX(csc.connection_date), '%Y-%m-%d %H:%i:%s'
		                       ) AS
		                       last_connection
		                          FROM csat_student_connection csc
		                         GROUP BY csc.student_seq) csc
		                    ON cs.student_seq = csc.student_seq
		 WHERE ( student_id LIKE CONCAT('%', #{search}, '%')
		      OR nickname LIKE CONCAT('%', #{search}, '%') )
		 LIMIT #{pageNumber}, 10; 
	</select>
	
	<select id="selectListCountYmd" parameterType="String" resultMap="YmdCountVoMap">
		SELECT CAST(DATE_FORMAT(create_date, '%H') AS SIGNED) AS hour,COUNT(student_seq) AS count_join
		  FROM csat_student
		 WHERE create_date &gt;= DATE_FORMAT(#{ymd}, '%Y-%m-%d %H:%i:%s')
		   AND create_date &lt; DATE_ADD(DATE_FORMAT(#{ymd}, '%Y-%m-%d %H:%i:%s'), INTERVAL 1 day)
		 GROUP BY DATE_FORMAT(create_date, '%H')
	</select>
	
	<select id="selectListCountYm" parameterType="String" resultMap="YmCountVoMap">
		SELECT CAST(DATE_FORMAT(create_date, '%d') AS SIGNED) AS day,COUNT(student_seq) AS count_join
		  FROM csat_student
		 WHERE create_date &gt;= DATE_FORMAT(CONCAT(#{ym}, '01'), '%Y-%m-%d')
		   AND create_date &lt; DATE_ADD(DATE_FORMAT(CONCAT(#{ym}, '01'), '%Y-%m-%d'), INTERVAL 1 month)
		 GROUP BY DATE_FORMAT(create_date, '%d')
	</select>
	
	<select id="selectListCountYear" parameterType="String" resultMap="YearCountVoMap">
		SELECT CAST(DATE_FORMAT(create_date, '%m') AS SIGNED) AS year,COUNT(student_seq) AS count_join
		  FROM csat_student
		 WHERE create_date &gt;= DATE_FORMAT(CONCAT(#{year}, '0101'), '%Y-%m-%d')
		   AND create_date &lt; DATE_ADD(DATE_FORMAT(CONCAT(#{year}, '0101'), '%Y-%m-%d'), INTERVAL 1 year)
		 GROUP BY DATE_FORMAT(create_date, '%m')
	</select>
	
	<insert id="insert" parameterType="StudentVo">
		 INSERT INTO csat_student
	     VALUES ( #{studentSequence}, #{studentId}, #{studentPassword}, #{nickname}, 
	     		  #{photoCode}, # {photoName}, #{csatSequence},'Y', #{createDate}) 
	</insert>
	
	<update id="updateInformation" parameterType="StudentVo">
		UPDATE csat_student
		   SET nickname = #{nickname}, photo_code = #{photoCode}, photo_name = #{photoName}, csat_seq = #{csatSequence}
		 WHERE student_seq = #{studentSequence}
	</update>

	<update id="updatePassword" parameterType="Map">
		UPDATE csat_student
		   SET student_password = #{newPassword}
		 WHERE student_seq = #{studentSequence}
	</update>
	
	<update id="updateUseYnN" parameterType="int">
		UPDATE csat_student
		   SET use_yn = 'N'
		 WHERE student_seq = #{studentSequence} 
	</update>
	
</mapper>
