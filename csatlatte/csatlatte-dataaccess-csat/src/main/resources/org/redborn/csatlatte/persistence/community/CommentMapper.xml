<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="community.comment">
	
	<resultMap type="CommentVo" id="CommentVoMap">
		<result column="comment_seq" property="commentSequence"/>
		<result column="student_seq" property="studentSequence"/>
		<result column="nickname" property="nickname" typeHandler="org.redborn.csatlatte.commons.mybatis.AES256TypeHandler"/>
		<result column="content" property="content"/>
		<result column="report" property="report" typeHandler="org.redborn.csatlatte.commons.mybatis.BooleanTypeHandler"/>
		<result column="blind" property="blind" typeHandler="org.redborn.csatlatte.commons.mybatis.BooleanTypeHandler"/>
		<result column="write_ymdhms" property="writeYmdhms"/>
	</resultMap>
	
	<resultMap type="CountVo" id="YmdCountVoMap">
		<result column="hour" property="key"/>
		<result column="count_write" property="count"/>
	</resultMap>
	
	<resultMap type="CountVo" id="YmCountVoMap">
		<result column="day" property="key"/>
		<result column="count_write" property="count"/>
	</resultMap>
	
	<resultMap type="CountVo" id="YearCountVoMap">
		<result column="month" property="key"/>
		<result column="count_write" property="count"/>
	</resultMap>
	
	<select id="selectOne" parameterType="Map" resultType="int">
		SELECT COUNT(*)
		  FROM csat_community_comment
		 WHERE community_type_seq = #{communityTypeSequence}
		   AND community_seq = #{communitySequence}
		   AND comment_seq = #{commentSequence}
		   AND student_seq = #{studentSequence}
	</select>
	
	<select id="selectListCountYmd" parameterType="Map" resultMap="YmdCountVoMap">
		SELECT CAST(DATE_FORMAT(write_date, '%H') AS SIGNED) AS hour,COUNT(comment_seq) AS count_write
		  FROM csat_community_comment
		 WHERE write_date &gt;= STR_TO_DATE(#{ymd}, '%Y%m%d')
		   AND write_date &lt; DATE_ADD(STR_TO_DATE(#{ymd}, '%Y%m%d'), INTERVAL 1 day)
		   AND community_type_seq = #{communityTypeSequence}
		 GROUP BY DATE_FORMAT(write_date, '%H')
	</select>
	
	<select id="selectListCountYm" parameterType="Map" resultMap="YmCountVoMap">
		SELECT CAST(DATE_FORMAT(write_date, '%d') AS SIGNED) AS day,COUNT(comment_seq) AS count_write
		  FROM csat_community_comment
		 WHERE write_date &gt;= STR_TO_DATE(CONCAT(#{ym}, '01'), '%Y%m%d')
		   AND write_date &lt; DATE_ADD(STR_TO_DATE(CONCAT(#{ym}, '01'), '%Y%m%d'), INTERVAL 1 month)
		   AND community_type_seq = #{communityTypeSequence}
		 GROUP BY DATE_FORMAT(write_date, '%d') 
	</select>
	
	<select id="selectListCountYear" parameterType="Map" resultMap="YearCountVoMap">
		SELECT CAST(DATE_FORMAT(write_date, '%m') AS SIGNED) AS month,COUNT(comment_seq) AS count_write
		  FROM csat_community_comment
		 WHERE write_date &gt;= STR_TO_DATE(CONCAT(#{year}, '0101'), '%Y%m%d')
		   AND write_date &lt; DATE_ADD(STR_TO_DATE(CONCAT(#{year}, '0101'), '%Y%m%d'), INTERVAL 1 year)
		   AND community_type_seq = #{communityTypeSequence}
		 GROUP BY DATE_FORMAT(write_date, '%m') 
	</select>
	
	<select id="selectList" parameterType="Map" resultMap="CommentVoMap">
		SELECT ccc.comment_seq,ccc.student_seq,cs.nickname,
			   IF (IFNULL(cccb.community_type_seq, 0) = 0, ccc.content, NULL) AS content,
		       DATE_FORMAT(ccc.write_date, '%Y%m%d%H%i%s') AS write_ymdhms,
		       IF (IFNULL(cccr.community_type_seq, 0) = 0, 0, 1) AS report,
		       IF (IFNULL(cccb.community_type_seq, 0) = 0, 0, 1) AS blind
		  FROM csat_community_comment ccc
		       INNER JOIN csat_student cs
		               ON cs.student_seq = ccc.student_seq
		       LEFT OUTER JOIN (SELECT community_type_seq,community_seq,comment_seq
		                          FROM csat_community_comment_report
		                         WHERE student_seq = #{studentSequence}
		                           AND community_type_seq = #{communityTypeSequence}
		                           AND community_seq = #{communitySequence}) cccr
		                    ON ccc.community_type_seq = cccr.community_type_seq
		                       AND ccc.community_seq = cccr.community_seq
		                       AND ccc.comment_seq = cccr.comment_seq
		       LEFT OUTER JOIN (SELECT community_type_seq,community_seq,comment_seq
		                          FROM csat_community_comment_blind
		                         WHERE community_type_seq = #{communityTypeSequence}
		                           AND community_seq = #{communitySequence}) cccb
		                    ON ccc.community_type_seq = cccb.community_type_seq
		                       AND ccc.community_seq = cccb.community_seq
		                       AND ccc.comment_seq = cccb.comment_seq
		 WHERE ccc.use_yn = 'Y'
		   AND ccc.community_type_seq = #{communityTypeSequence}
		   AND ccc.community_seq = #{communitySequence}
	</select>
	
	<insert id="insert" parameterType="CommentVo">
		INSERT INTO csat_community_comment(community_type_seq, community_seq, comment_seq, student_seq, content, write_date, use_yn)
		VALUES (#{communityTypeSequence}, #{communitySequence}, (SELECT IFNULL(max(ccc.comment_seq),0)+1 as comment_seq FROM csat_community_comment ccc WHERE ccc.community_type_seq = #{communityTypeSequence} AND community_seq = #{communitySequence}), #{studentSequence}, #{content}, NOW(3), 'Y')	
	</insert>
	
	<update id="update" parameterType="CommentVo">
		UPDATE csat_community_comment
		   SET content = #{content}
		 WHERE community_seq = #{communitySequence}
		   AND comment_seq = #{commentSequence}
		   AND community_type_seq = #{communityTypeSequence}
		   AND use_yn = 'Y'
	</update>
	
	<update id="updateUseYnN" parameterType="Map">
		UPDATE csat_community_comment
		   SET use_yn = 'N'
		 WHERE community_type_seq = #{communityTypeSequence}
		   AND community_seq = #{communitySequence}
		   AND comment_seq = #{commentSequence}
		   AND student_seq = #{studentSequence}
	</update>
	
</mapper>